/*
 * This file was generated by the Gradle 'init' task.
 */

plugins {
    id 'java'
    id 'maven-publish'
    id 'distribution'
}

repositories {
    mavenLocal()
    maven {
        url = 'https://nexus.informationgrid.eu/repository/maven-public'
    }

    maven {
        url = 'http://repo.maven.apache.org/maven2'
    }
}

configurations {
    zipArchive
    installer
}

dependencies {
    compile('de.ingrid:ingrid-iplug:5.0.0') {
        exclude group: 'opensymphony', module: 'quartz'
    }
    compile 'de.ingrid:ingrid-utils:5.0.0'
    compile 'de.ingrid:ingrid-base-webapp:5.1.0-SNAPSHOT'
    zipArchive 'de.ingrid:ingrid-base-webapp:5.0.0:res@zip'
    compile 'commons-fileupload:commons-fileupload:1.3.3'
    compile 'commons-io:commons-io:1.4'
    compile 'org.apache.poi:poi:3.5-beta5'
    compile 'org.mortbay.jetty:jetty:6.1.26'
    compile 'org.mortbay.jetty:jsp-2.1:6.1.14'
    compile 'org.apache.logging.log4j:log4j-1.2-api:2.8.2'
    compile 'org.apache.logging.log4j:log4j-api:2.8.2'
    compile 'org.apache.logging.log4j:log4j-core:2.8.2'
    testCompile 'junit:junit:4.12'
    testCompile 'org.mockito:mockito-core:2.0.44-beta'
    installer 'de.ingrid:ingrid-installer:3.6.1'
}

group = 'de.ingrid'
version = '5.1.0-SNAPSHOT'
description = 'InGrid iPlug Excel'
sourceCompatibility = '1.8'

task unzip(type:Copy) {
    into file('build/base-webapp').getAbsolutePath() from zipTree(configurations.zipArchive.singleFile)
    into file('build/installer').getAbsolutePath() from zipTree(configurations.installer.singleFile)
}



publishing {
    publications {
        maven(MavenPublication) {
            from(components.java)
        }
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

distZip {

}

distributions {
    main {
        baseName = project.name
        contents {
            into('/') {
                from('src/main/release/ant-installer')
                from('build/installer')
            }
            into("/${project.name}-${project.version}") {
                from('src/main/release/scripts')
            }
            into("/${project.name}-${project.version}/conf") {
                from('src/main/resources')
            }
            into("/${project.name}-${project.version}/webapp") {
                from('src/main/webapp') {
                    exclude "**/WEB-INF/jetty-web.xml"
                }
                from('build/base-webapp')
            }
            into("/${project.name}-${project.version}/webapp/WEB-INF") {
                from('src/main/release/jetty/jetty-web.xml')
            }
            into("/${project.name}-${project.version}/lib") {  // Copy the following jars to the lib/ directory in the distribution archive
                from jar
                from configurations.runtimeClasspath
                dirMode = 0755
                fileMode = 0644
            }
        }
    }
}
